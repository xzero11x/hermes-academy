---
import Navigation from '../components/Navigation.astro';
import { courses } from '../data/courses.js';
import { getTutorsByCourseFast, getUniversityByIdFast } from '../data/optimized.js';
import Layout from '../layouts/Layout.astro';

// Obtener parámetros de consulta para filtro por universidad
const url = new URL(Astro.request.url);
let universityId = url.searchParams.get('university');

// Si no hay query param, intentar obtener del hash (fallback)
if (!universityId) {
  const hash = url.hash;
  const hashMatch = hash.match(/university=(\d+)/);
  if (hashMatch && hashMatch[1]) {
    universityId = hashMatch[1];
  }
}

// Filtrar cursos por universidad si se especifica
let filteredCourses = courses;
let selectedUniversity = null;

if (universityId && universityId !== 'null' && universityId.trim() !== '') {
  const univId = parseInt(universityId, 10);

  if (!isNaN(univId)) {
    filteredCourses = courses.filter(course => course.universityId === univId);
    selectedUniversity = getUniversityByIdFast(univId);
  }
}

// Función para obtener el logo de la universidad por ID
function getUniversityLogo(universityId: number) {
  const university = getUniversityByIdFast(universityId);
  return university
    ? import.meta.env.BASE_URL + university.logo
    : import.meta.env.BASE_URL + '/universidades/default.png';
}

// Función para obtener el nombre de la universidad por ID
function getUniversityName(universityId: number) {
  const university = getUniversityByIdFast(universityId);
  return university ? university.name : 'Universidad';
}

// Función para convertir números a números romanos
function toRoman(num: number): string {
  const values = [10, 9, 5, 4, 1];
  const symbols = ['X', 'IX', 'V', 'IV', 'I'];

  let result = '';
  for (let i = 0; i < values.length; i++) {
    const value = values[i];
    const symbol = symbols[i];
    if (value && symbol) {
      while (num >= value) {
        result += symbol;
        num -= value;
      }
    }
  }
  return result;
}

// Enriquecer cursos con datos de universidades y tutores
const enrichedCourses = filteredCourses.map(course => ({
  ...course,
  universityName: getUniversityName(course.universityId),
  universityLogo: getUniversityLogo(course.universityId),
  tutorsCount: getTutorsByCourseFast(course.id).length,
}));
---

<Layout title='Cursos - Hermes Academy'>
  <Navigation currentSection='cursos' />
  <main class='courses-main'>
    <section class='courses-section'>
      <div class='container'>
        <!-- Header de la sección -->
        <div class='section-header'>
          <div class='header-title'>
            {
              selectedUniversity ? (
                <>
                  <h1 class='section-title'>Cursos de {selectedUniversity.name}</h1>
                  <p class='section-description'>
                    Explora todos los cursos disponibles en {selectedUniversity.shortName} y conecta con sus tutores
                    especializados
                  </p>
                  <div class='university-filter'>
                    <div class='filter-info'>
                      <img src={selectedUniversity.logo} alt={selectedUniversity.name} class='filter-logo' />
                      <span class='filter-text'>{enrichedCourses.length} cursos disponibles</span>
                    </div>
                    <a href={import.meta.env.BASE_URL + '/courses'} class='remove-filter'>
                      <i class='fas fa-times' />
                      Ver todos los cursos
                    </a>
                  </div>
                </>
              ) : (
                <>
                  <h1 class='section-title'>Explora los cursos disponibles</h1>
                  <p class='section-description'>
                    Encuentra el curso perfecto para tu carrera universitaria y conecta con los mejores tutores
                  </p>
                </>
              )
            }
          </div>
          <div class='header-search'>
            <div class='search-box'>
              <i class='fas fa-search search-icon'></i>
              <input type='text' placeholder='Buscar curso...' class='search-input' />
            </div>
          </div>
        </div>

        <!-- Grid de cursos -->
        <div class='courses-grid'>
          {
            enrichedCourses.map(course => (
              <div class='course-card'>
                <div class='course-header'>
                  <h3 class='course-name'>
                    <i class='fa-solid fa-book' />
                    {course.name}
                  </h3>
                  <div class='course-cycle'>
                    <span class='cycle-number'>{toRoman(course.cycle)}</span>
                  </div>
                </div>

                <div class='course-info'>
                  <p class='course-code'>Código: {course.code}</p>
                  <div class='course-university'>
                    <div class='university-logo-small'>
                      <img src={course.universityLogo} alt={course.universityName} />
                    </div>
                    <span class='university-name'>{course.universityName}</span>
                  </div>
                  <p class='course-description'>{course.description}</p>

                  <div class='course-details'>
                    <div class='detail-item'>
                      <i class='fas fa-university detail-icon' />
                      <span>Área: {course.area}</span>
                    </div>
                    <div class='detail-item'>
                      <i class='fas fa-star detail-icon' />
                      <span>{course.tutorsCount} tutores disponibles</span>
                    </div>
                  </div>
                </div>

                <div class='course-actions'>
                  <a href={import.meta.env.BASE_URL + `/course/${course.id}`} class='btn btn-primary btn-block'>
                    Ver detalles
                  </a>
                </div>
              </div>
            ))
          }
        </div>

        <!-- Paginación -->
        <div class='pagination'>
          <button class='pagination-btn pagination-prev' disabled>
            <i class='fas fa-arrow-left'></i>
            Anterior
          </button>

          <div class='pagination-numbers'>
            <button class='pagination-number active'>1</button>
            <button class='pagination-number'>2</button>
            <button class='pagination-number'>3</button>
            <span class='pagination-dots'>...</span>
            <button class='pagination-number'>8</button>
          </div>

          <button class='pagination-btn pagination-next'>
            Siguiente
            <i class='fas fa-arrow-right'></i>
          </button>
        </div>
      </div>
    </section>
  </main>
</Layout>

<style>
  .courses-main {
    min-height: calc(100vh - 70px);
    padding-top: 70px;
  }

  .courses-section {
    padding: var(--spacing-3xl) 0;
  }

  .section-header {
    margin-bottom: var(--spacing-3xl);
  }

  .header-title {
    text-align: center;
    margin-bottom: var(--spacing-lg);
  }

  .section-title {
    font-size: var(--font-size-4xl);
    font-weight: 700;
    color: var(--text-primary);
    margin-bottom: var(--spacing-md);
  }

  .section-description {
    font-size: var(--font-size-lg);
    color: var(--text-secondary);
    line-height: 1.6;
    max-width: 600px;
    margin: 0 auto;
  }

  .university-filter {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--spacing-lg);
    margin-top: var(--spacing-lg);
    padding: var(--spacing-md);
    background: var(--surface-secondary);
    border-radius: 12px;
    border: 1px solid var(--border-light);
    max-width: 500px;
    margin-left: auto;
    margin-right: auto;
    margin-top: var(--spacing-lg);
  }

  .filter-info {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
  }

  .filter-logo {
    width: 32px;
    height: 32px;
    border-radius: 6px;
    object-fit: cover;
  }

  .filter-text {
    font-size: var(--font-size-sm);
    font-weight: 500;
    color: var(--text-primary);
  }

  .remove-filter {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    padding: var(--spacing-xs) var(--spacing-sm);
    background: var(--surface-tertiary);
    color: var(--text-secondary);
    text-decoration: none;
    border-radius: 6px;
    font-size: var(--font-size-sm);
    transition: all 0.2s ease;
  }

  .remove-filter:hover {
    background: var(--surface-primary);
    color: var(--text-primary);
  }

  .header-search {
    display: flex;
    justify-content: flex-end;
  }

  .search-box {
    position: relative;
    width: 320px;
  }

  .search-icon {
    position: absolute;
    left: var(--spacing-md);
    top: 50%;
    transform: translateY(-50%);
    color: var(--text-light);
    font-size: 14px;
  }

  .search-input {
    width: 100%;
    padding: 12px 16px 12px 40px;
    border: 1px solid var(--border-medium);
    border-radius: var(--radius-lg);
    font-size: var(--font-size-sm);
    background: white;
    transition: all 0.2s ease;
    outline: none;
  }

  .search-input:focus {
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }

  .search-input::placeholder {
    color: var(--text-light);
  }

  /* Responsive para header */
  @media (max-width: 768px) {
    .section-title {
      font-size: var(--font-size-3xl);
    }

    .header-search {
      justify-content: center;
    }

    .search-box {
      width: 100%;
      max-width: 400px;
    }
  }

  /* Grid de cursos */
  .courses-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: var(--spacing-xl);
    margin-bottom: var(--spacing-3xl);
  }

  .course-card {
    background: var(--bg-principal);
    border-radius: var(--radius-xl);
    padding: var(--spacing-lg);
    border: 1px solid var(--border-light);
    transition:
      transform 0.2s ease,
      border-color 0.2s ease;
  }

  .course-card:hover {
    transform: translateY(-2px);
    border-color: var(--color-primary);
  }

  .course-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: var(--spacing-md);
  }

  .course-name {
    font-size: var(--font-size-lg);
    font-weight: 600;
    color: var(--text-primary);
    margin: 0;
    line-height: 1.3;
    flex: 1;
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
  }

  .course-name i {
    color: var(--color-primary);
    font-size: var(--font-size-md);
  }

  .cycle-number {
    font-size: var(--font-size-sm);
    font-weight: 700;
    color: var(--color-primary);
    padding: var(--spacing-xs) var(--spacing-sm);
    background: var(--color-primary-light);
    border-radius: var(--radius-md);
    flex-shrink: 0;
  }

  .course-cycle {
    flex-shrink: 0;
  }

  .course-info {
    margin-bottom: var(--spacing-md);
  }

  .course-university {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    margin-bottom: var(--spacing-sm);
  }

  .university-logo-small {
    flex-shrink: 0;
    width: 24px;
    height: 24px;
    border-radius: var(--radius-sm);
    overflow: hidden;
    border: 1px solid var(--border-light);
  }

  .university-logo-small img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    background: white;
  }

  .university-name {
    font-size: var(--font-size-xs);
    color: var(--text-secondary);
    font-weight: 500;
  }

  .course-code {
    font-size: var(--font-size-sm);
    color: var(--text-primary);
    margin-bottom: var(--spacing-sm);
    font-weight: 600;
  }

  .course-description {
    font-size: var(--font-size-sm);
    color: var(--text-secondary);
    margin-bottom: var(--spacing-md);
    line-height: 1.5;
  }

  .course-details {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm);
  }

  .detail-item {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    color: var(--text-secondary);
    font-size: var(--font-size-sm);
  }

  .detail-icon {
    color: var(--color-primary);
    flex-shrink: 0;
  }

  .course-actions {
    margin-bottom: var(--spacing-md);
  }

  .btn-block {
    width: 100%;
  }

  .course-stats {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--spacing-sm);
    padding-top: var(--spacing-md);
    border-top: 1px solid var(--border-light);
  }

  .stat {
    text-align: center;
  }

  .stat-number {
    display: block;
    font-size: var(--font-size-lg);
    font-weight: 600;
    color: var(--color-primary);
    margin-bottom: var(--spacing-xs);
  }

  .stat-label {
    font-size: var(--font-size-xs);
    color: var(--text-light);
  }

  /* Paginación */
  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: var(--spacing-md);
  }

  .pagination-btn {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    padding: var(--spacing-sm) var(--spacing-lg);
    border: 1px solid var(--border-medium);
    background: var(--bg-principal);
    border-radius: var(--radius-md);
    color: var(--text-secondary);
    font-size: var(--font-size-sm);
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .pagination-btn:hover:not(:disabled) {
    background: var(--color-primary-light);
    border-color: var(--color-primary);
    color: var(--color-primary);
  }

  .pagination-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .pagination-numbers {
    display: flex;
    gap: var(--spacing-xs);
    align-items: center;
  }

  .pagination-number {
    width: 40px;
    height: 40px;
    border: 1px solid var(--border-medium);
    background: var(--bg-principal);
    border-radius: var(--radius-md);
    color: var(--text-secondary);
    font-size: var(--font-size-sm);
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .pagination-number:hover {
    background: var(--color-primary-light);
    border-color: var(--color-primary);
    color: var(--color-primary);
  }

  .pagination-number.active {
    background: var(--color-primary);
    border-color: var(--color-primary);
    color: var(--text-white);
  }

  .pagination-dots {
    padding: 0 var(--spacing-sm);
    color: var(--text-light);
  }

  @media (max-width: 768px) {
    .courses-grid {
      grid-template-columns: 1fr;
    }

    .pagination {
      flex-direction: column;
      gap: var(--spacing-lg);
    }

    .pagination-numbers {
      order: -1;
    }
  }
</style>
